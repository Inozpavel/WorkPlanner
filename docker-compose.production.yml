x-timezone: &time-zone
  TZ: Europe/Moscow

x-common-variables: &common-variables
  <<: *time-zone
  ASPNETCORE_ENVIRONMENT: Production

x-postgres: &postgres
  POSTGRES_USER: "postgres"
  POSTGRES_PASSWORD: "SP2Y5h7mGoS3dezu6EXp"
  PGDATA: "/postgres_data"

x-postgres-connection:
  connection-address: &connection-address "Host=postgres_db;Port=5432;Username=postgres;Password=SP2Y5h7mGoS3dezu6EXp;"

x-rabbitmq: &rabbitmq
  RABBITMQ_DEFAULT_VHOST: &rabbitmq-virtual-host "WorkPlanner"
  RABBITMQ_DEFAULT_USER: &rabbitmq-username "user"
  RABBITMQ_DEFAULT_PASS: &rabbitmq-password "user"

x-rabbitmq-conection: &rabbitmq-connection
  MassTransit:Host: "rabbitmq"
  MassTransit:VirtualHost: *rabbitmq-virtual-host
  MassTransit:Username: *rabbitmq-username
  MassTransit:Password: *rabbitmq-password

x-identity-server: &identity-server
  IdentityServer:Authority: "http://identity_server"
  IdentityServer:TokenUrl: "http://mc.icomm.pro:4000/gateway/identity/connect/token"

x-identity-server-swagger-client: &swagger-client
  IdentityServer:ClientId: "SwaggerApp"
  IdentityServer:Secret: &swagger-client-secret "SwaggerAppSecret"

x-identity-server-gateway:
  Origin: &gateway-origin "http://mc.icomm.pro:4000"
  Secret: &gateway-secret "GatewaySecret"
  ClientId: &gateway-client-id "Gateway"

x-mails: &mails
  Gateway:Host: "http://mc.icomm.pro:4000"

services:

  gateway:
    image: inozpavel/workplannergateway
    restart: always
    environment:
      <<: *common-variables
      <<: *identity-server
      IdentityServer:ClientId: *gateway-client-id
      IdentityServer:Secret: *gateway-secret
    depends_on:
      identity_server:
        condition: service_started
      tasks.api:
        condition: service_started
      users.api:
        condition: service_started
    ports:
      - "4000:80"

  tasks.api:
    image: inozpavel/workplannertasksapi
    restart: always
    environment:
      <<: *common-variables
      ConnectionStrings:TasksDb: *connection-address
      DbName: "Database=Tasks"
      <<: *identity-server
      <<: *swagger-client
      <<: *rabbitmq-connection
    depends_on:
      postgres_db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - "7000:80"

  users.api:
    image: inozpavel/workplannerusersapi
    restart: always
    environment:
      <<: *common-variables
      ConnectionStrings:Identity: *connection-address
      DbName: "Database=Identity"
      <<: *identity-server
      <<: *swagger-client
      <<: *rabbitmq-connection
      <<: *mails
    depends_on:
      postgres_db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - "7001:80"

  identity_server:
    image: inozpavel/workplanneridentityserver
    restart: always
    environment:
      <<: *common-variables
      ConnectionStrings:Identity: *connection-address
      DbName: "Database=Identity"
      Clients:Gateway:Origin: *gateway-origin
      Clients:Gateway:Secret: *gateway-secret
      Clients:SwaggerApp:Secret: *swagger-client-secret
      IssuerUri: "identity_server"
    depends_on:
      postgres_db:
        condition: service_healthy
    ports:
      - "10000:80"

  postgres_db:
    image: library/postgres
    restart: always
    environment:
      <<: *time-zone
      <<: *postgres
    volumes:
      - "./postgres:/postgres_data"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 1s
      timeout: 3s
      retries: 30
    ports:
      - "5500:5432"

  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    environment:
      <<: *rabbitmq
      <<: *time-zone
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "-q", "ping" ]
      interval: 1s
      timeout: 3s
      retries: 30
    ports:
      - "15600:15672"